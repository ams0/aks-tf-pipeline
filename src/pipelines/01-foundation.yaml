trigger:
  branches:
    include: [main]
  paths:
    include:
      - src/terraform/stages/01-foundation
      - src/terraform/modules/vnetsubnet
      - src/pipelines/01-foundation.yaml
      - src/terraform/stages/vars

name: $(Build.DefinitionName)-$(SourceBranchName)-${{ parameters.environment }}-${{ parameters.progressive }}

parameters:
  - name: progressive #override at pipeline run UI
    displayName: Progressive Number
    default: 001
    type: number
  - name: environment #override at pipeline run UI
    displayName: Environment
    default: dev
    type: string
    values:
    - dev
    - tst
    - prd


variables:
  - group: 'TF_LIBRARY'
  - name: stage
    value: 01-foundation
  - name: tf_state_rg
    value: "tfstates" # name of the resource group to create/use for the terraform state file
  - name: tf_state_sa_name
    value: "tfstateblobs" # name of of the storage account to create/use for the terraform state file


  - name: IS_NOT_PR
    value: "${{ eq(lower(startsWith(variables['Build.SourceBranch'], 'refs/pull/')), 'false') }}"
  - name: EXTRA_OPTS
    value: "-var-file=../vars/common.tfvars -var progressive=${{ parameters.progressive }} -var-file=../vars/${{ parameters.environment }}.tfvars"


stages:
  - template: templates/stages-terraform-deploy.yml
    parameters:
      EXTRA_OPTS: ${{ variables.EXTRA_OPTS }}
      WORKDIR: src/terraform/stages/${{ variables.stage }}
      tf_state_rg: ${{ variables.tf_state_rg }}
      tf_state_sa_name: ${{ variables.tf_state_sa_name }}
      tf_state_key: ${{ variables.stage }}-${{ parameters.environment }}-${{ parameters.progressive }}
      IS_NOT_PR: ${{ variables['IS_NOT_PR'] }}
      ARM_SERVICE_CONNECTION: $(ARM_SERVICE_CONNECTION)
      ARM_SERVICE_CONNECTION_NAME: $(ARM_SERVICE_CONNECTION_NAME)
